# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildNumber: '$(Build.BuildId)'
  registry.infra: docker.pkg.github.com/uanid/myserver
  registry.infra.key: Github-MyServer-Registry
  registryDeploy: docker.pkg.github.com/uanid/notibot

stages:
  - stage: Jar_Build_Deploy_Stage
    displayName: Build and Deploy Jar
    jobs:
      - job: Jar_Build_Job
        displayName: Build and Deploy Jar Job
        container:
          image: docker.pkg.github.com/uanid/myserver/my-maven:latest
          endpoint: Github-MyServer-Registry
        steps:
          - script: |
              mvn -s /usr/share/maven/ref/settings.xml clean deploy
          - publish: target/
            artifact: NotiApp
  - stage: Docker_Build_Stage
    displayName: Docker Image Build
    jobs:
      - job: Docker_Build_Job
        displayName: Docker Image Build
        container:
          image: gitlab/dind:latest
        steps:
          - download: current
            artifact: NotiApp
            patterns: "*.jar"
          - script: |
              ls -al ..
              ls -al ../NotiApp
              ls -al
              pwd
              id
              docker build -t $(registryDeploy)/notibot:$(buildNumber) -t $(registryDeploy)/notibot:latest .
              docker login $(registryDeploy) -u $(docker.username) -p $(docker.password)
              docker push $(registryDeploy)/notibot:$(buildNumber)
              docker push $(registryDeploy)/notibot:latest